openapi: 3.0.0
info:
  title: Artist Scraper
  description: Scrape my watchlist and push to database.
  version: 0.0.1
servers:
  - url: /scrapy_bot
    description: Main server url
paths:
  /users:
    get:
      summary: Returns a list of users.
      description: Optional extended description in CommonMark or HTML.
      responses:
        '200':
          description: A JSON array of user names
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Access Denied
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      security:
        - jwt: []
      x-openapi-router-controller: openapi_server.controllers.users
  /update_users:
    post:
      summary: Updates artists list.
      responses:
        '200':
          description: A JSON array of user names
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Access Denied
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        security:
          - jwt: []
        x-openapi-router-controller: openapi_server.controllers.users
components:
  schemas:
    Error:
      properties:
        code:
          description: A code for the specific error.  Used to help in determining
            possible root causes of an error.
          type: string
        message:
          description: A message providing additional detail for an error.
          type: string
      type: object
    Message:
      example:
        level: INFO
        message: message
      properties:
        level:
          description: A level for the specific message.
          enum:
            - INFO
            - WARN
            - DEBUG
          type: string
        message:
          description: A message providing additional detail for message.
          type: string
      type: object
    KeyValue:
      description: A simple key-value pair.
      example:
        value: value
        key: key
      properties:
        key:
          description: A unique key for this pair.
          type: string
        value:
          description: A value for this pair.
          type: string
      required:
        - key
        - value
      type: object
  securitySchemes:
    jwt:
      bearerFormat: JWT
      scheme: bearer
      type: http
      x-bearerInfoFunc: openapi_server.controllers.security_controller

      